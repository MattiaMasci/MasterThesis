Epoch 1
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.316313  [   64/25000]
loss: 2.296745  [ 6464/25000]
loss: 2.299160  [12864/25000]
loss: 2.293778  [19264/25000]
Test Error: 
 Accuracy: 10.2%, Avg loss: 2.299792 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7236, 0.7206, 0.6936, 0.7239, 0.7323, 0.7670, 0.8215])
Mean and Std before Normalize:
 tensor(0.7404) tensor(0.0418)
Tensor after Normalize:
 tensor([ 0.7236, -0.4723, -1.1184, -0.3934, -0.1923,  0.6372,  0.8215])
Cumulative sum array:
tensor([ 0.7236,  0.2512, -0.8672, -1.2606, -1.4528, -0.8157,  0.0058])
Calculated argmax:
tensor(0)
Epoch 2
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.311759  [   64/25000]
loss: 2.295442  [ 6464/25000]
loss: 2.295088  [12864/25000]
loss: 2.293340  [19264/25000]
Test Error: 
 Accuracy: 13.0%, Avg loss: 2.297385 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7480, 0.7352, 0.7002, 0.7379, 0.7447, 0.7835, 0.8244])
Mean and Std before Normalize:
 tensor(0.7534) tensor(0.0397)
Tensor after Normalize:
 tensor([ 0.7480, -0.4585, -1.3401, -0.3912, -0.2199,  0.7573,  0.8244])
Cumulative sum array:
tensor([ 0.7480,  0.2895, -1.0506, -1.4418, -1.6617, -0.9044, -0.0800])
Calculated argmax:
tensor(0)
Epoch 3
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.308360  [   64/25000]
loss: 2.293869  [ 6464/25000]
loss: 2.291037  [12864/25000]
loss: 2.291929  [19264/25000]
Test Error: 
 Accuracy: 14.3%, Avg loss: 2.294566 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7293, 0.7285, 0.6944, 0.7316, 0.7375, 0.7851, 0.8133])
Mean and Std before Normalize:
 tensor(0.7457) tensor(0.0400)
Tensor after Normalize:
 tensor([ 0.7293, -0.4294, -1.2831, -0.3527, -0.2036,  0.9864,  0.8133])
Cumulative sum array:
tensor([ 0.7293,  0.2999, -0.9832, -1.3359, -1.5395, -0.5532,  0.2602])
Calculated argmax:
tensor(0)
Epoch 4
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.305799  [   64/25000]
loss: 2.291618  [ 6464/25000]
loss: 2.286425  [12864/25000]
loss: 2.289660  [19264/25000]
Test Error: 
 Accuracy: 13.5%, Avg loss: 2.291214 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7209, 0.7281, 0.6861, 0.7291, 0.7361, 0.7793, 0.7950])
Mean and Std before Normalize:
 tensor(0.7392) tensor(0.0368)
Tensor after Normalize:
 tensor([ 0.7209, -0.3024, -1.4449, -0.2752, -0.0864,  1.0896,  0.7950])
Cumulative sum array:
tensor([ 0.7209,  0.4186, -1.0264, -1.3015, -1.3879, -0.2984,  0.4966])
Calculated argmax:
tensor(0)
Epoch 5
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.303561  [   64/25000]
loss: 2.288865  [ 6464/25000]
loss: 2.280800  [12864/25000]
loss: 2.286607  [19264/25000]
Test Error: 
 Accuracy: 12.4%, Avg loss: 2.287026 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7143, 0.7317, 0.6862, 0.7232, 0.7329, 0.7720, 0.7727])
Mean and Std before Normalize:
 tensor(0.7333) tensor(0.0309)
Tensor after Normalize:
 tensor([ 0.7143, -0.0523, -1.5226, -0.3272, -0.0131,  1.2524,  0.7727])
Cumulative sum array:
tensor([ 0.7143,  0.6620, -0.8606, -1.1878, -1.2009,  0.0514,  0.8241])
Calculated argmax:
tensor(6)
Epoch 6
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.301127  [   64/25000]
loss: 2.285111  [ 6464/25000]
loss: 2.274351  [12864/25000]
loss: 2.282289  [19264/25000]
Test Error: 
 Accuracy: 12.1%, Avg loss: 2.281542 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7009, 0.7328, 0.6800, 0.7157, 0.7316, 0.7611, 0.7469])
Mean and Std before Normalize:
 tensor(0.7241) tensor(0.0276)
Tensor after Normalize:
 tensor([ 0.7009,  0.3146, -1.5992, -0.3042,  0.2693,  1.3376,  0.7469])
Cumulative sum array:
tensor([ 0.7009,  1.0155, -0.5838, -0.8879, -0.6187,  0.7189,  1.4658])
Calculated argmax:
tensor(6)
Epoch 7
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.297419  [   64/25000]
loss: 2.280393  [ 6464/25000]
loss: 2.265960  [12864/25000]
loss: 2.276228  [19264/25000]
Test Error: 
 Accuracy: 12.5%, Avg loss: 2.273856 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.6913, 0.7274, 0.6717, 0.7038, 0.7219, 0.7436, 0.7146])
Mean and Std before Normalize:
 tensor(0.7106) tensor(0.0239)
Tensor after Normalize:
 tensor([ 0.6913,  0.6997, -1.6233, -0.2838,  0.4716,  1.3768,  0.7146])
Cumulative sum array:
tensor([ 0.6913,  1.3910, -0.2323, -0.5162, -0.0445,  1.3323,  2.0468])
Calculated argmax:
tensor(6)
Epoch 8
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.291575  [   64/25000]
loss: 2.273750  [ 6464/25000]
loss: 2.253827  [12864/25000]
loss: 2.267479  [19264/25000]
Test Error: 
 Accuracy: 13.1%, Avg loss: 2.262357 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.6925, 0.7215, 0.6585, 0.6920, 0.7026, 0.7209, 0.6750])
Mean and Std before Normalize:
 tensor(0.6947) tensor(0.0230)
Tensor after Normalize:
 tensor([ 0.6925,  1.1623, -1.5730, -0.1188,  0.3418,  1.1401,  0.6750])
Cumulative sum array:
tensor([0.6925, 1.8548, 0.2818, 0.1630, 0.5048, 1.6449, 2.3199])
Calculated argmax:
tensor(6)
Epoch 9
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.282701  [   64/25000]
loss: 2.263859  [ 6464/25000]
loss: 2.235930  [12864/25000]
loss: 2.254242  [19264/25000]
Test Error: 
 Accuracy: 14.2%, Avg loss: 2.245025 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7090, 0.7215, 0.6465, 0.6824, 0.6857, 0.6995, 0.6313])
Mean and Std before Normalize:
 tensor(0.6823) tensor(0.0328)
Tensor after Normalize:
 tensor([ 0.7090,  1.1971, -1.0926,  0.0039,  0.1045,  0.5258,  0.6313])
Cumulative sum array:
tensor([0.7090, 1.9061, 0.8135, 0.8175, 0.9220, 1.4478, 2.0791])
Calculated argmax:
tensor(6)
Epoch 10
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.267710  [   64/25000]
loss: 2.248860  [ 6464/25000]
loss: 2.208178  [12864/25000]
loss: 2.232979  [19264/25000]
Test Error: 
 Accuracy: 16.7%, Avg loss: 2.218751 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7389, 0.7322, 0.6430, 0.6765, 0.6766, 0.6783, 0.5920])
Mean and Std before Normalize:
 tensor(0.6768) tensor(0.0504)
Tensor after Normalize:
 tensor([ 0.7389,  1.0986, -0.6692, -0.0054, -0.0033,  0.0295,  0.5920])
Cumulative sum array:
tensor([0.7389, 1.8374, 1.1682, 1.1628, 1.1596, 1.1890, 1.7811])
Calculated argmax:
tensor(1)
Epoch 11
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.243291  [   64/25000]
loss: 2.225366  [ 6464/25000]
loss: 2.167745  [12864/25000]
loss: 2.198755  [19264/25000]
Test Error: 
 Accuracy: 19.2%, Avg loss: 2.180847 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.7765, 0.7554, 0.6620, 0.6875, 0.6852, 0.6695, 0.5757])
Mean and Std before Normalize:
 tensor(0.6874) tensor(0.0658)
Tensor after Normalize:
 tensor([ 0.7765,  1.0327, -0.3859,  0.0017, -0.0334, -0.2714,  0.5757])
Cumulative sum array:
tensor([0.7765, 1.8092, 1.4233, 1.4250, 1.3917, 1.1203, 1.6959])
Calculated argmax:
tensor(1)
Epoch 12
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.203433  [   64/25000]
loss: 2.191347  [ 6464/25000]
loss: 2.113018  [12864/25000]
loss: 2.151004  [19264/25000]
Test Error: 
 Accuracy: 22.6%, Avg loss: 2.131221 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.8188, 0.7942, 0.7145, 0.7240, 0.7202, 0.6941, 0.6033])
Mean and Std before Normalize:
 tensor(0.7242) tensor(0.0701)
Tensor after Normalize:
 tensor([ 0.8188,  0.9989, -0.1375, -0.0017, -0.0560, -0.4289,  0.6033])
Cumulative sum array:
tensor([0.8188, 1.8176, 1.6801, 1.6784, 1.6224, 1.1935, 1.7968])
Calculated argmax:
tensor(1)
Epoch 13
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.134191  [   64/25000]
loss: 2.145967  [ 6464/25000]
loss: 2.039618  [12864/25000]
loss: 2.088705  [19264/25000]
Test Error: 
 Accuracy: 25.6%, Avg loss: 2.075132 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.8577, 0.8404, 0.7922, 0.7876, 0.7866, 0.7690, 0.6915])
Mean and Std before Normalize:
 tensor(0.7893) tensor(0.0537)
Tensor after Normalize:
 tensor([ 0.8577,  0.9519,  0.0538, -0.0316, -0.0500, -0.3781,  0.6915])
Cumulative sum array:
tensor([0.8577, 1.8096, 1.8634, 1.8318, 1.7818, 1.4037, 2.0952])
Calculated argmax:
tensor(6)
Epoch 14
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 2.029485  [   64/25000]
loss: 2.095280  [ 6464/25000]
loss: 1.959900  [12864/25000]
loss: 2.031047  [19264/25000]
Test Error: 
 Accuracy: 25.6%, Avg loss: 2.039419 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9062, 0.8952, 0.8825, 0.8744, 0.8700, 0.8659, 0.8230])
Mean and Std before Normalize:
 tensor(0.8739) tensor(0.0266)
Tensor after Normalize:
 tensor([ 0.9062,  0.8027,  0.3237,  0.0173, -0.1463, -0.2994,  0.8230])
Cumulative sum array:
tensor([0.9062, 1.7089, 2.0326, 2.0499, 1.9036, 1.6042, 2.4273])
Calculated argmax:
tensor(6)
Epoch 15
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.940270  [   64/25000]
loss: 2.055889  [ 6464/25000]
loss: 1.897436  [12864/25000]
loss: 1.997144  [19264/25000]
Test Error: 
 Accuracy: 26.1%, Avg loss: 2.026250 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9396, 0.9339, 0.9331, 0.9274, 0.9160, 0.9181, 0.9049])
Mean and Std before Normalize:
 tensor(0.9247) tensor(0.0122)
Tensor after Normalize:
 tensor([ 0.9396,  0.7526,  0.6856,  0.2192, -0.7106, -0.5406,  0.9049])
Cumulative sum array:
tensor([0.9396, 1.6922, 2.3778, 2.5970, 1.8864, 1.3458, 2.2507])
Calculated argmax:
tensor(3)
Epoch 16
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.894267  [   64/25000]
loss: 2.030576  [ 6464/25000]
loss: 1.858356  [12864/25000]
loss: 1.974428  [19264/25000]
Test Error: 
 Accuracy: 27.3%, Avg loss: 2.006210 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9517, 0.9472, 0.9502, 0.9443, 0.9354, 0.9395, 0.9313])
Mean and Std before Normalize:
 tensor(0.9428) tensor(0.0077)
Tensor after Normalize:
 tensor([ 0.9517,  0.5751,  0.9582,  0.1990, -0.9660, -0.4244,  0.9313])
Cumulative sum array:
tensor([0.9517, 1.5268, 2.4850, 2.6840, 1.7180, 1.2936, 2.2249])
Calculated argmax:
tensor(3)
Epoch 17
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.863971  [   64/25000]
loss: 2.010425  [ 6464/25000]
loss: 1.831236  [12864/25000]
loss: 1.958772  [19264/25000]
Test Error: 
 Accuracy: 27.6%, Avg loss: 1.992414 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9537, 0.9502, 0.9549, 0.9503, 0.9455, 0.9500, 0.9394])
Mean and Std before Normalize:
 tensor(0.9492) tensor(0.0052)
Tensor after Normalize:
 tensor([ 0.9537,  0.2021,  1.0941,  0.2198, -0.6921,  0.1569,  0.9394])
Cumulative sum array:
tensor([0.9537, 1.1559, 2.2500, 2.4697, 1.7776, 1.9345, 2.8740])
Calculated argmax:
tensor(6)
Epoch 18
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.842077  [   64/25000]
loss: 1.993931  [ 6464/25000]
loss: 1.809406  [12864/25000]
loss: 1.941523  [19264/25000]
Test Error: 
 Accuracy: 28.4%, Avg loss: 1.982956 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9537, 0.9510, 0.9570, 0.9535, 0.9499, 0.9542, 0.9452])
Mean and Std before Normalize:
 tensor(0.9521) tensor(0.0038)
Tensor after Normalize:
 tensor([ 0.9537, -0.2851,  1.2858,  0.3857, -0.5766,  0.5679,  0.9452])
Cumulative sum array:
tensor([0.9537, 0.6686, 1.9544, 2.3401, 1.7635, 2.3314, 3.2766])
Calculated argmax:
tensor(6)
Epoch 19
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.825752  [   64/25000]
loss: 1.975531  [ 6464/25000]
loss: 1.787200  [12864/25000]
loss: 1.922212  [19264/25000]
Test Error: 
 Accuracy: 29.0%, Avg loss: 1.973316 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9551, 0.9525, 0.9565, 0.9552, 0.9536, 0.9576, 0.9493])
Mean and Std before Normalize:
 tensor(0.9543) tensor(0.0027)
Tensor after Normalize:
 tensor([ 0.9551, -0.6259,  0.8015,  0.3567, -0.2518,  1.2192,  0.9493])
Cumulative sum array:
tensor([0.9551, 0.3291, 1.1306, 1.4873, 1.2355, 2.4548, 3.4041])
Calculated argmax:
tensor(6)
Epoch 20
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.809700  [   64/25000]
loss: 1.954963  [ 6464/25000]
loss: 1.764987  [12864/25000]
loss: 1.903330  [19264/25000]
Test Error: 
 Accuracy: 29.6%, Avg loss: 1.968229 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9597, 0.9557, 0.9579, 0.9571, 0.9574, 0.9616, 0.9530])
Mean and Std before Normalize:
 tensor(0.9575) tensor(0.0028)
Tensor after Normalize:
 tensor([ 0.9597, -0.6459,  0.1447, -0.1292, -0.0358,  1.4894,  0.9530])
Cumulative sum array:
tensor([0.9597, 0.3138, 0.4585, 0.3293, 0.2935, 1.7829, 2.7358])
Calculated argmax:
tensor(6)
Epoch 21
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.791731  [   64/25000]
loss: 1.933782  [ 6464/25000]
loss: 1.749886  [12864/25000]
loss: 1.884961  [19264/25000]
Test Error: 
 Accuracy: 29.8%, Avg loss: 1.965578 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9612, 0.9578, 0.9592, 0.9592, 0.9597, 0.9634, 0.9547])
Mean and Std before Normalize:
 tensor(0.9593) tensor(0.0027)
Tensor after Normalize:
 tensor([ 0.9612, -0.5748, -0.0487, -0.0253,  0.1284,  1.5160,  0.9547])
Cumulative sum array:
tensor([0.9612, 0.3864, 0.3377, 0.3124, 0.4408, 1.9568, 2.9116])
Calculated argmax:
tensor(6)
Epoch 22
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.778971  [   64/25000]
loss: 1.910248  [ 6464/25000]
loss: 1.732876  [12864/25000]
loss: 1.871604  [19264/25000]
Test Error: 
 Accuracy: 29.6%, Avg loss: 1.976028 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9625, 0.9596, 0.9605, 0.9608, 0.9617, 0.9652, 0.9558])
Mean and Std before Normalize:
 tensor(0.9609) tensor(0.0029)
Tensor after Normalize:
 tensor([ 0.9625, -0.4260, -0.1376, -0.0292,  0.2844,  1.5053,  0.9558])
Cumulative sum array:
tensor([0.9625, 0.5365, 0.3989, 0.3697, 0.6541, 2.1594, 3.1152])
Calculated argmax:
tensor(6)
Epoch 23
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.773107  [   64/25000]
loss: 1.883633  [ 6464/25000]
loss: 1.717291  [12864/25000]
loss: 1.856115  [19264/25000]
Test Error: 
 Accuracy: 29.8%, Avg loss: 1.975291 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9639, 0.9613, 0.9614, 0.9623, 0.9634, 0.9675, 0.9567])
Mean and Std before Normalize:
 tensor(0.9624) tensor(0.0033)
Tensor after Normalize:
 tensor([ 0.9639, -0.3343, -0.2979, -0.0080,  0.3198,  1.5782,  0.9567])
Cumulative sum array:
tensor([0.9639, 0.6296, 0.3316, 0.3236, 0.6434, 2.2216, 3.1783])
Calculated argmax:
tensor(6)
Epoch 24
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.757497  [   64/25000]
loss: 1.853185  [ 6464/25000]
loss: 1.698496  [12864/25000]
loss: 1.836834  [19264/25000]
Test Error: 
 Accuracy: 29.9%, Avg loss: 1.984098 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9647, 0.9633, 0.9623, 0.9638, 0.9648, 0.9688, 0.9575])
Mean and Std before Normalize:
 tensor(0.9636) tensor(0.0034)
Tensor after Normalize:
 tensor([ 0.9647, -0.0935, -0.3731,  0.0561,  0.3465,  1.5408,  0.9575])
Cumulative sum array:
tensor([0.9647, 0.8713, 0.4981, 0.5542, 0.9007, 2.4415, 3.3990])
Calculated argmax:
tensor(6)
Epoch 25
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.748601  [   64/25000]
loss: 1.823241  [ 6464/25000]
loss: 1.682470  [12864/25000]
loss: 1.829280  [19264/25000]
Test Error: 
 Accuracy: 30.3%, Avg loss: 1.975541 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9670, 0.9663, 0.9644, 0.9659, 0.9665, 0.9709, 0.9584])
Mean and Std before Normalize:
 tensor(0.9656) tensor(0.0038)
Tensor after Normalize:
 tensor([ 0.9670,  0.1866, -0.3319,  0.0753,  0.2355,  1.3977,  0.9584])
Cumulative sum array:
tensor([0.9670, 1.1536, 0.8217, 0.8970, 1.1324, 2.5301, 3.4885])
Calculated argmax:
tensor(6)
Epoch 26
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.733584  [   64/25000]
loss: 1.792194  [ 6464/25000]
loss: 1.664664  [12864/25000]
loss: 1.808830  [19264/25000]
Test Error: 
 Accuracy: 30.2%, Avg loss: 2.000864 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9693, 0.9687, 0.9662, 0.9680, 0.9680, 0.9721, 0.9597])
Mean and Std before Normalize:
 tensor(0.9674) tensor(0.0038)
Tensor after Normalize:
 tensor([ 0.9693,  0.3402, -0.3087,  0.1575,  0.1368,  1.2039,  0.9597])
Cumulative sum array:
tensor([0.9693, 1.3094, 1.0007, 1.1582, 1.2951, 2.4989, 3.4586])
Calculated argmax:
tensor(6)
Epoch 27
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.744802  [   64/25000]
loss: 1.760373  [ 6464/25000]
loss: 1.649146  [12864/25000]
loss: 1.790935  [19264/25000]
Test Error: 
 Accuracy: 30.4%, Avg loss: 1.995632 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9719, 0.9708, 0.9682, 0.9698, 0.9700, 0.9734, 0.9613])
Mean and Std before Normalize:
 tensor(0.9694) tensor(0.0039)
Tensor after Normalize:
 tensor([ 0.9719,  0.3816, -0.3016,  0.1142,  0.1747,  1.0418,  0.9613])
Cumulative sum array:
tensor([0.9719, 1.3534, 1.0518, 1.1660, 1.3407, 2.3825, 3.3438])
Calculated argmax:
tensor(6)
Epoch 28
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.731731  [   64/25000]
loss: 1.730075  [ 6464/25000]
loss: 1.632727  [12864/25000]
loss: 1.776290  [19264/25000]
Test Error: 
 Accuracy: 31.9%, Avg loss: 1.948376 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9742, 0.9728, 0.9702, 0.9725, 0.9715, 0.9747, 0.9627])
Mean and Std before Normalize:
 tensor(0.9712) tensor(0.0041)
Tensor after Normalize:
 tensor([ 0.9742,  0.3777, -0.2591,  0.3176,  0.0758,  0.8567,  0.9627])
Cumulative sum array:
tensor([0.9742, 1.3519, 1.0928, 1.4104, 1.4862, 2.3430, 3.3056])
Calculated argmax:
tensor(6)
Epoch 29
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.689999  [   64/25000]
loss: 1.700866  [ 6464/25000]
loss: 1.612826  [12864/25000]
loss: 1.774110  [19264/25000]
Test Error: 
 Accuracy: 32.4%, Avg loss: 1.936254 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9754, 0.9741, 0.9714, 0.9737, 0.9731, 0.9757, 0.9639])
Mean and Std before Normalize:
 tensor(0.9725) tensor(0.0041)
Tensor after Normalize:
 tensor([ 0.9754,  0.4056, -0.2601,  0.3014,  0.1545,  0.8040,  0.9639])
Cumulative sum array:
tensor([0.9754, 1.3809, 1.1208, 1.4223, 1.5768, 2.3809, 3.3447])
Calculated argmax:
tensor(6)
Epoch 30
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.672791  [   64/25000]
loss: 1.674997  [ 6464/25000]
loss: 1.591187  [12864/25000]
loss: 1.732601  [19264/25000]
Test Error: 
 Accuracy: 33.3%, Avg loss: 1.910533 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9761, 0.9755, 0.9731, 0.9754, 0.9746, 0.9770, 0.9648])
Mean and Std before Normalize:
 tensor(0.9738) tensor(0.0042)
Tensor after Normalize:
 tensor([ 0.9761,  0.4133, -0.1630,  0.3976,  0.1877,  0.7710,  0.9648])
Cumulative sum array:
tensor([0.9761, 1.3894, 1.2264, 1.6240, 1.8117, 2.5826, 3.5474])
Calculated argmax:
tensor(6)
Epoch 31
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.640483  [   64/25000]
loss: 1.652424  [ 6464/25000]
loss: 1.577961  [12864/25000]
loss: 1.697832  [19264/25000]
Test Error: 
 Accuracy: 34.6%, Avg loss: 1.846691 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9776, 0.9768, 0.9744, 0.9765, 0.9762, 0.9787, 0.9669])
Mean and Std before Normalize:
 tensor(0.9753) tensor(0.0039)
Tensor after Normalize:
 tensor([ 0.9776,  0.3807, -0.2313,  0.3111,  0.2364,  0.8572,  0.9669])
Cumulative sum array:
tensor([0.9776, 1.3583, 1.1270, 1.4381, 1.6745, 2.5318, 3.4986])
Calculated argmax:
tensor(6)
Epoch 32
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.581087  [   64/25000]
loss: 1.629469  [ 6464/25000]
loss: 1.562209  [12864/25000]
loss: 1.636094  [19264/25000]
Test Error: 
 Accuracy: 36.1%, Avg loss: 1.798137 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9791, 0.9782, 0.9760, 0.9778, 0.9774, 0.9797, 0.9692])
Mean and Std before Normalize:
 tensor(0.9768) tensor(0.0035)
Tensor after Normalize:
 tensor([ 0.9791,  0.4125, -0.2103,  0.2796,  0.1732,  0.8242,  0.9692])
Cumulative sum array:
tensor([0.9791, 1.3916, 1.1813, 1.4609, 1.6341, 2.4583, 3.4275])
Calculated argmax:
tensor(6)
Epoch 33
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.535139  [   64/25000]
loss: 1.610414  [ 6464/25000]
loss: 1.547739  [12864/25000]
loss: 1.609300  [19264/25000]
Test Error: 
 Accuracy: 36.9%, Avg loss: 1.762407 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9805, 0.9796, 0.9775, 0.9789, 0.9782, 0.9804, 0.9709])
Mean and Std before Normalize:
 tensor(0.9780) tensor(0.0033)
Tensor after Normalize:
 tensor([ 0.9805,  0.4850, -0.1544,  0.2760,  0.0651,  0.7201,  0.9709])
Cumulative sum array:
tensor([0.9805, 1.4655, 1.3111, 1.5871, 1.6521, 2.3722, 3.3430])
Calculated argmax:
tensor(6)
Epoch 34
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.503157  [   64/25000]
loss: 1.595063  [ 6464/25000]
loss: 1.532454  [12864/25000]
loss: 1.567287  [19264/25000]
Test Error: 
 Accuracy: 37.7%, Avg loss: 1.727162 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9813, 0.9806, 0.9787, 0.9800, 0.9788, 0.9812, 0.9723])
Mean and Std before Normalize:
 tensor(0.9790) tensor(0.0031)
Tensor after Normalize:
 tensor([ 0.9813,  0.5164, -0.0856,  0.3089, -0.0592,  0.7134,  0.9723])
Cumulative sum array:
tensor([0.9813, 1.4978, 1.4122, 1.7211, 1.6619, 2.3753, 3.3476])
Calculated argmax:
tensor(6)
Epoch 35
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.480077  [   64/25000]
loss: 1.577476  [ 6464/25000]
loss: 1.518783  [12864/25000]
loss: 1.554920  [19264/25000]
Test Error: 
 Accuracy: 38.3%, Avg loss: 1.700218 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9822, 0.9815, 0.9798, 0.9805, 0.9795, 0.9816, 0.9740])
Mean and Std before Normalize:
 tensor(0.9799) tensor(0.0028)
Tensor after Normalize:
 tensor([ 0.9822,  0.6040, -0.0177,  0.2412, -0.1458,  0.6076,  0.9740])
Cumulative sum array:
tensor([0.9822, 1.5862, 1.5685, 1.8097, 1.6639, 2.2715, 3.2455])
Calculated argmax:
tensor(6)
Epoch 36
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.469120  [   64/25000]
loss: 1.573587  [ 6464/25000]
loss: 1.507936  [12864/25000]
loss: 1.533888  [19264/25000]
Test Error: 
 Accuracy: 38.8%, Avg loss: 1.689804 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9827, 0.9822, 0.9806, 0.9810, 0.9799, 0.9824, 0.9755])
Mean and Std before Normalize:
 tensor(0.9806) tensor(0.0025)
Tensor after Normalize:
 tensor([ 0.9827,  0.6314,  0.0072,  0.1506, -0.2678,  0.7257,  0.9755])
Cumulative sum array:
tensor([0.9827, 1.6140, 1.6212, 1.7719, 1.5041, 2.2297, 3.2052])
Calculated argmax:
tensor(6)
Epoch 37
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.467715  [   64/25000]
loss: 1.564646  [ 6464/25000]
loss: 1.500724  [12864/25000]
loss: 1.500988  [19264/25000]
Test Error: 
 Accuracy: 38.9%, Avg loss: 1.686981 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9832, 0.9828, 0.9811, 0.9815, 0.9803, 0.9830, 0.9767])
Mean and Std before Normalize:
 tensor(0.9812) tensor(0.0023)
Tensor after Normalize:
 tensor([ 0.9832,  0.6791, -0.0719,  0.1218, -0.3938,  0.7977,  0.9767])
Cumulative sum array:
tensor([0.9832, 1.6623, 1.5904, 1.7122, 1.3183, 2.1160, 3.0927])
Calculated argmax:
tensor(6)
Epoch 38
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.463049  [   64/25000]
loss: 1.560973  [ 6464/25000]
loss: 1.487655  [12864/25000]
loss: 1.484413  [19264/25000]
Test Error: 
 Accuracy: 38.9%, Avg loss: 1.683920 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9836, 0.9833, 0.9814, 0.9820, 0.9809, 0.9836, 0.9777])
Mean and Std before Normalize:
 tensor(0.9818) tensor(0.0021)
Tensor after Normalize:
 tensor([ 0.9836,  0.7291, -0.1789,  0.0981, -0.4194,  0.8639,  0.9777])
Cumulative sum array:
tensor([0.9836, 1.7127, 1.5338, 1.6319, 1.2125, 2.0764, 3.0541])
Calculated argmax:
tensor(6)
Epoch 39
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.463226  [   64/25000]
loss: 1.546925  [ 6464/25000]
loss: 1.479685  [12864/25000]
loss: 1.465066  [19264/25000]
Test Error: 
 Accuracy: 39.3%, Avg loss: 1.673347 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9840, 0.9839, 0.9822, 0.9826, 0.9814, 0.9842, 0.9787])
Mean and Std before Normalize:
 tensor(0.9824) tensor(0.0019)
Tensor after Normalize:
 tensor([ 0.9840,  0.7727, -0.1207,  0.0933, -0.5511,  0.8959,  0.9787])
Cumulative sum array:
tensor([0.9840, 1.7567, 1.6360, 1.7293, 1.1782, 2.0741, 3.0528])
Calculated argmax:
tensor(6)
Epoch 40
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.448086  [   64/25000]
loss: 1.536701  [ 6464/25000]
loss: 1.469967  [12864/25000]
loss: 1.446519  [19264/25000]
Test Error: 
 Accuracy: 39.7%, Avg loss: 1.663247 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9844, 0.9841, 0.9825, 0.9831, 0.9818, 0.9845, 0.9796])
Mean and Std before Normalize:
 tensor(0.9829) tensor(0.0018)
Tensor after Normalize:
 tensor([ 0.9844,  0.7358, -0.2242,  0.1617, -0.5823,  0.9179,  0.9796])
Cumulative sum array:
tensor([0.9844, 1.7202, 1.4960, 1.6577, 1.0754, 1.9933, 2.9729])
Calculated argmax:
tensor(6)
Epoch 41
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.438397  [   64/25000]
loss: 1.527639  [ 6464/25000]
loss: 1.459326  [12864/25000]
loss: 1.425993  [19264/25000]
Test Error: 
 Accuracy: 39.6%, Avg loss: 1.667047 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9846, 0.9844, 0.9827, 0.9833, 0.9822, 0.9846, 0.9803])
Mean and Std before Normalize:
 tensor(0.9832) tensor(0.0016)
Tensor after Normalize:
 tensor([ 0.9846,  0.7710, -0.2540,  0.1122, -0.6216,  0.9013,  0.9803])
Cumulative sum array:
tensor([0.9846, 1.7556, 1.5016, 1.6138, 0.9922, 1.8935, 2.8738])
Calculated argmax:
tensor(6)
Epoch 42
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.446965  [   64/25000]
loss: 1.520149  [ 6464/25000]
loss: 1.452362  [12864/25000]
loss: 1.411429  [19264/25000]
Test Error: 
 Accuracy: 40.3%, Avg loss: 1.647088 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9847, 0.9846, 0.9831, 0.9835, 0.9824, 0.9852, 0.9809])
Mean and Std before Normalize:
 tensor(0.9835) tensor(0.0015)
Tensor after Normalize:
 tensor([ 0.9847,  0.7523, -0.2487,  0.0236, -0.7102,  1.1295,  0.9809])
Cumulative sum array:
tensor([0.9847, 1.7370, 1.4882, 1.5118, 0.8017, 1.9312, 2.9120])
Calculated argmax:
tensor(6)
Epoch 43
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.425208  [   64/25000]
loss: 1.511442  [ 6464/25000]
loss: 1.444634  [12864/25000]
loss: 1.398746  [19264/25000]
Test Error: 
 Accuracy: 41.0%, Avg loss: 1.630765 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9849, 0.9849, 0.9833, 0.9837, 0.9826, 0.9854, 0.9813])
Mean and Std before Normalize:
 tensor(0.9837) tensor(0.0015)
Tensor after Normalize:
 tensor([ 0.9849,  0.7874, -0.3071, -0.0399, -0.7552,  1.1615,  0.9813])
Cumulative sum array:
tensor([0.9849, 1.7723, 1.4652, 1.4253, 0.6701, 1.8316, 2.8129])
Calculated argmax:
tensor(6)
Epoch 44
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.411318  [   64/25000]
loss: 1.505091  [ 6464/25000]
loss: 1.433898  [12864/25000]
loss: 1.385962  [19264/25000]
Test Error: 
 Accuracy: 41.4%, Avg loss: 1.623579 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9851, 0.9850, 0.9835, 0.9839, 0.9829, 0.9857, 0.9817])
Mean and Std before Normalize:
 tensor(0.9840) tensor(0.0014)
Tensor after Normalize:
 tensor([ 0.9851,  0.7691, -0.3422, -0.0650, -0.7680,  1.2235,  0.9817])
Cumulative sum array:
tensor([0.9851, 1.7541, 1.4119, 1.3470, 0.5789, 1.8024, 2.7842])
Calculated argmax:
tensor(6)
Epoch 45
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.404870  [   64/25000]
loss: 1.500066  [ 6464/25000]
loss: 1.426804  [12864/25000]
loss: 1.373105  [19264/25000]
Test Error: 
 Accuracy: 41.9%, Avg loss: 1.605767 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9854, 0.9854, 0.9839, 0.9842, 0.9831, 0.9859, 0.9820])
Mean and Std before Normalize:
 tensor(0.9843) tensor(0.0014)
Tensor after Normalize:
 tensor([ 0.9854,  0.7858, -0.2439, -0.0462, -0.8465,  1.1413,  0.9820])
Cumulative sum array:
tensor([0.9854, 1.7713, 1.5273, 1.4811, 0.6346, 1.7759, 2.7579])
Calculated argmax:
tensor(6)
Epoch 46
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.383008  [   64/25000]
loss: 1.490232  [ 6464/25000]
loss: 1.420288  [12864/25000]
loss: 1.362179  [19264/25000]
Test Error: 
 Accuracy: 42.3%, Avg loss: 1.601710 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9857, 0.9855, 0.9842, 0.9842, 0.9835, 0.9863, 0.9826])
Mean and Std before Normalize:
 tensor(0.9846) tensor(0.0013)
Tensor after Normalize:
 tensor([ 0.9857,  0.7161, -0.2973, -0.2432, -0.8083,  1.3000,  0.9826])
Cumulative sum array:
tensor([0.9857, 1.7017, 1.4045, 1.1613, 0.3531, 1.6530, 2.6356])
Calculated argmax:
tensor(6)
Epoch 47
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.377699  [   64/25000]
loss: 1.480089  [ 6464/25000]
loss: 1.410730  [12864/25000]
loss: 1.352540  [19264/25000]
Test Error: 
 Accuracy: 42.6%, Avg loss: 1.593312 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9858, 0.9857, 0.9843, 0.9845, 0.9838, 0.9867, 0.9829])
Mean and Std before Normalize:
 tensor(0.9848) tensor(0.0013)
Tensor after Normalize:
 tensor([ 0.9858,  0.6691, -0.3798, -0.2627, -0.7555,  1.4489,  0.9829])
Cumulative sum array:
tensor([0.9858, 1.6549, 1.2751, 1.0124, 0.2569, 1.7058, 2.6887])
Calculated argmax:
tensor(6)
Epoch 48
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.372636  [   64/25000]
loss: 1.475304  [ 6464/25000]
loss: 1.403926  [12864/25000]
loss: 1.340921  [19264/25000]
Test Error: 
 Accuracy: 42.9%, Avg loss: 1.582429 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9857, 0.9857, 0.9844, 0.9845, 0.9842, 0.9869, 0.9831])
Mean and Std before Normalize:
 tensor(0.9849) tensor(0.0013)
Tensor after Normalize:
 tensor([ 0.9857,  0.6348, -0.4244, -0.3328, -0.6116,  1.5885,  0.9831])
Cumulative sum array:
tensor([0.9857, 1.6205, 1.1961, 0.8633, 0.2517, 1.8401, 2.8233])
Calculated argmax:
tensor(6)
Epoch 49
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.360405  [   64/25000]
loss: 1.460735  [ 6464/25000]
loss: 1.400575  [12864/25000]
loss: 1.325369  [19264/25000]
Test Error: 
 Accuracy: 43.1%, Avg loss: 1.582359 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9860, 0.9859, 0.9850, 0.9847, 0.9843, 0.9871, 0.9835])
Mean and Std before Normalize:
 tensor(0.9852) tensor(0.0012)
Tensor after Normalize:
 tensor([ 0.9860,  0.5666, -0.2080, -0.3905, -0.7333,  1.5419,  0.9835])
Cumulative sum array:
tensor([0.9860, 1.5526, 1.3446, 0.9541, 0.2208, 1.7627, 2.7462])
Calculated argmax:
tensor(6)
Epoch 50
-------------------------------
PARAMETERS THAT REQUIRE GRADIENT:
conv1.weight
conv1.bias
conv2.weight
conv2.bias
conv3.weight
conv3.bias
conv4.weight
conv4.bias
conv5.weight
conv5.bias
fc1.weight
fc1.bias
fc2.weight
fc2.bias

loss: 1.355427  [   64/25000]
loss: 1.453959  [ 6464/25000]
loss: 1.388819  [12864/25000]
loss: 1.315159  [19264/25000]
Test Error: 
 Accuracy: 43.5%, Avg loss: 1.571727 

--------- FREEZING PROCEDURE ---------
Tensor before normalize:
 tensor([0.9862, 0.9861, 0.9851, 0.9850, 0.9846, 0.9872, 0.9837])
Mean and Std before Normalize:
 tensor(0.9854) tensor(0.0012)
Tensor after Normalize:
 tensor([ 0.9862,  0.5899, -0.2474, -0.3703, -0.6843,  1.5246,  0.9837])
Cumulative sum array:
tensor([0.9862, 1.5761, 1.3287, 0.9584, 0.2741, 1.7987, 2.7824])
Calculated argmax:
tensor(6)
Done!
